/* tslint:disable */
/* eslint-disable */
/**
 * Url Manager Service
 * The URL Manager service provides a set of APIs for managing URL rewrites within your application. URL rewriting is a technique used to modify the appearance or structure of URLs while maintaining the functionality and accessibility of the underlying resources.  The URL Manager service offers various operations to create, retrieve, update, and delete URL rewrite configurations. These configurations allow you to define rules that map incoming URLs to different paths or destinations based on specific criteria. By using URL rewriting, you can enhance the user experience, improve SEO (Search Engine Optimization), and manage complex URL structures effectively.  To get started with the URL Manager service, you need to integrate the provided Proto API into your application. The API supports various programming languages and frameworks, making it easy to incorporate URL rewriting functionality into your existing codebase.  Once integrated, you can utilize the different API methods to create, manage, and query URL rewrite configurations based on your application\'s requirements.  Refer to the API documentation for detailed information on the request and response formats, authentication requirements, and example usage of each API method.
 *
 * The version of the OpenAPI document: 1.0.0
 * Contact: info@gemini-commerce.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


/**
 * 
 * @export
 */
export const UrlRewriteRedirectType = {
    Unknown: 'RedirectType_UNKNOWN',
    Ok: 'RedirectType_OK',
    Permanent: 'RedirectType_PERMANENT',
    Temporary: 'RedirectType_TEMPORARY'
} as const;
export type UrlRewriteRedirectType = typeof UrlRewriteRedirectType[keyof typeof UrlRewriteRedirectType];


export function UrlRewriteRedirectTypeFromJSON(json: any): UrlRewriteRedirectType {
    return UrlRewriteRedirectTypeFromJSONTyped(json, false);
}

export function UrlRewriteRedirectTypeFromJSONTyped(json: any, ignoreDiscriminator: boolean): UrlRewriteRedirectType {
    return json as UrlRewriteRedirectType;
}

export function UrlRewriteRedirectTypeToJSON(value?: UrlRewriteRedirectType | null): any {
    return value as any;
}

