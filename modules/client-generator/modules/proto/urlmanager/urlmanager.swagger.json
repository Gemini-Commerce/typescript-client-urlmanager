{
  "swagger": "2.0",
  "info": {
    "title": "Url Manager Service",
    "description": "The URL Manager service provides a set of APIs for managing URL rewrites within your application. URL rewriting is a technique used to modify the appearance or structure of URLs while maintaining the functionality and accessibility of the underlying resources.\n\nThe URL Manager service offers various operations to create, retrieve, update, and delete URL rewrite configurations. These configurations allow you to define rules that map incoming URLs to different paths or destinations based on specific criteria. By using URL rewriting, you can enhance the user experience, improve SEO (Search Engine Optimization), and manage complex URL structures effectively.\n\nTo get started with the URL Manager service, you need to integrate the provided Proto API into your application. The API supports various programming languages and frameworks, making it easy to incorporate URL rewriting functionality into your existing codebase.\n\nOnce integrated, you can utilize the different API methods to create, manage, and query URL rewrite configurations based on your application's requirements.\n\nRefer to the API documentation for detailed information on the request and response formats, authentication requirements, and example usage of each API method.",
    "version": "1.0.0",
    "contact": {
      "name": "Gemini Team",
      "email": "info@gemini-commerce.com"
    },
    "license": {
      "name": "Gemini fair use license",
      "url": "https://gemini-commerce.com/api/fair-use-license"
    }
  },
  "tags": [
    {
      "name": "UrlManager",
      "description": "Url Manager Description",
      "externalDocs": {
        "url": "https://gemini-commerce.com/api/urlmanager"
      }
    }
  ],
  "host": "urlmanager.api.gogemini.io",
  "basePath": "/",
  "schemes": [
    "https"
  ],
  "consumes": [
    "application/json"
  ],
  "produces": [
    "application/json"
  ],
  "paths": {
    "/urlmanager.UrlManager/ChangeUrlRewriteRequestPath": {
      "post": {
        "summary": "Change Url Rewrite Request Path",
        "description": "Modify the request path of a specific URL rewrite configuration.",
        "operationId": "UrlManager_ChangeUrlRewriteRequestPath2",
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/urlmanagerChangeUrlRewriteRequestPathResponse"
            }
          },
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          },
          "500": {
            "description": "An internal error occurred is thrown when an incompatible payload is sent",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/urlmanagerChangeUrlRewriteRequestPathRequest"
            }
          }
        ],
        "tags": [
          "Basic Operations"
        ],
        "security": [
          {
            "standardAuthorization": []
          }
        ]
      }
    },
    "/urlmanager.UrlManager/CreateUrlRewrite": {
      "post": {
        "summary": "Create Url Rewrite",
        "description": "Create a new URL rewrite configuration with customizable rules.",
        "operationId": "UrlManager_CreateUrlRewrite2",
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/urlmanagerUrlRewrite"
            }
          },
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          },
          "500": {
            "description": "An internal error occurred is thrown when an incompatible payload is sent",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/urlmanagerCreateUrlRewriteRequest"
            }
          }
        ],
        "tags": [
          "Basic Operations"
        ],
        "security": [
          {
            "standardAuthorization": []
          }
        ]
      }
    },
    "/urlmanager.UrlManager/DeleteUrlRewrite": {
      "post": {
        "summary": "Delete Url Rewrite",
        "description": "Delete an existing URL rewrite configuration.",
        "operationId": "UrlManager_DeleteUrlRewrite2",
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/urlmanagerDeleteUrlRewriteResponse"
            }
          },
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          },
          "500": {
            "description": "An internal error occurred is thrown when an incompatible payload is sent",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/urlmanagerDeleteUrlRewriteRequest"
            }
          }
        ],
        "tags": [
          "Basic Operations"
        ],
        "security": [
          {
            "standardAuthorization": []
          }
        ]
      }
    },
    "/urlmanager.UrlManager/GetUrlRewrite": {
      "post": {
        "summary": "Get Url Rewrite",
        "description": "Retrieve the details of a specific URL rewrite configuration.",
        "operationId": "UrlManager_GetUrlRewrite2",
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/urlmanagerUrlRewrite"
            }
          },
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          },
          "500": {
            "description": "An internal error occurred is thrown when an incompatible payload is sent",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/urlmanagerGetUrlRewriteRequest"
            }
          }
        ],
        "tags": [
          "Basic Operations"
        ],
        "security": [
          {
            "standardAuthorization": []
          }
        ]
      }
    },
    "/urlmanager.UrlManager/ListUrlRewrites": {
      "post": {
        "summary": "List Url Rewrites",
        "description": "Retrieve a list of all URL rewrite configurations in your application.",
        "operationId": "UrlManager_ListUrlRewrites2",
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/urlmanagerListUrlRewritesResponse"
            }
          },
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          },
          "500": {
            "description": "An internal error occurred is thrown when an incompatible payload is sent",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/urlmanagerListUrlRewritesRequest"
            }
          }
        ],
        "tags": [
          "Basic Operations"
        ],
        "security": [
          {
            "standardAuthorization": []
          }
        ]
      }
    },
    "/urlmanager.UrlManager/ListUrlRewritesByTargetPaths": {
      "post": {
        "summary": "List Url Rewrites By Target Paths",
        "description": "Retrieve URL rewrite configurations based on target paths.",
        "operationId": "UrlManager_ListUrlRewritesByTargetPaths2",
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/urlmanagerListUrlRewritesByTargetPathsRequest "
            }
          },
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          },
          "500": {
            "description": "An internal error occurred is thrown when an incompatible payload is sent",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/urlmanagerListUrlRewritesByTargetPathsRequest"
            }
          }
        ],
        "tags": [
          "Basic Operations"
        ],
        "security": [
          {
            "standardAuthorization": []
          }
        ]
      }
    },
    "/urlmanager.UrlManager/ResolveUrlRewrite": {
      "post": {
        "summary": "Resolve Url Rewrite",
        "description": "Resolve and retrieve the rewritten URL for a given input URL.",
        "operationId": "UrlManager_ResolveUrlRewrite2",
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/urlmanagerUrlRewrite"
            }
          },
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          },
          "500": {
            "description": "An internal error occurred is thrown when an incompatible payload is sent",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/urlmanagerResolveUrlRewriteRequest"
            }
          }
        ],
        "tags": [
          "Basic Operations"
        ],
        "security": [
          {
            "standardAuthorization": []
          }
        ]
      }
    },
    "/urlmanager/change_url_rewrite_request_path": {
      "post": {
        "summary": "Change Url Rewrite Request Path",
        "description": "Modify the request path of a specific URL rewrite configuration.",
        "operationId": "UrlManager_ChangeUrlRewriteRequestPath",
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/urlmanagerChangeUrlRewriteRequestPathResponse"
            }
          },
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          },
          "500": {
            "description": "An internal error occurred is thrown when an incompatible payload is sent",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/urlmanagerChangeUrlRewriteRequestPathRequest"
            }
          }
        ],
        "tags": [
          "Basic Operations"
        ],
        "security": [
          {
            "standardAuthorization": []
          }
        ]
      }
    },
    "/urlmanager/create_url_rewrite": {
      "post": {
        "summary": "Create Url Rewrite",
        "description": "Create a new URL rewrite configuration with customizable rules.",
        "operationId": "UrlManager_CreateUrlRewrite",
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/urlmanagerUrlRewrite"
            }
          },
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          },
          "500": {
            "description": "An internal error occurred is thrown when an incompatible payload is sent",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/urlmanagerCreateUrlRewriteRequest"
            }
          }
        ],
        "tags": [
          "Basic Operations"
        ],
        "security": [
          {
            "standardAuthorization": []
          }
        ]
      }
    },
    "/urlmanager/delete_url_rewrite": {
      "post": {
        "summary": "Delete Url Rewrite",
        "description": "Delete an existing URL rewrite configuration.",
        "operationId": "UrlManager_DeleteUrlRewrite",
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/urlmanagerDeleteUrlRewriteResponse"
            }
          },
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          },
          "500": {
            "description": "An internal error occurred is thrown when an incompatible payload is sent",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/urlmanagerDeleteUrlRewriteRequest"
            }
          }
        ],
        "tags": [
          "Basic Operations"
        ],
        "security": [
          {
            "standardAuthorization": []
          }
        ]
      }
    },
    "/urlmanager/get_url_rewrite": {
      "post": {
        "summary": "Get Url Rewrite",
        "description": "Retrieve the details of a specific URL rewrite configuration.",
        "operationId": "UrlManager_GetUrlRewrite",
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/urlmanagerUrlRewrite"
            }
          },
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          },
          "500": {
            "description": "An internal error occurred is thrown when an incompatible payload is sent",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/urlmanagerGetUrlRewriteRequest"
            }
          }
        ],
        "tags": [
          "Basic Operations"
        ],
        "security": [
          {
            "standardAuthorization": []
          }
        ]
      }
    },
    "/urlmanager/list_url_rewrites": {
      "post": {
        "summary": "List Url Rewrites",
        "description": "Retrieve a list of all URL rewrite configurations in your application.",
        "operationId": "UrlManager_ListUrlRewrites",
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/urlmanagerListUrlRewritesResponse"
            }
          },
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          },
          "500": {
            "description": "An internal error occurred is thrown when an incompatible payload is sent",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/urlmanagerListUrlRewritesRequest"
            }
          }
        ],
        "tags": [
          "Basic Operations"
        ],
        "security": [
          {
            "standardAuthorization": []
          }
        ]
      }
    },
    "/urlmanager/list_url_rewrites_by_target_paths": {
      "post": {
        "summary": "List Url Rewrites By Target Paths",
        "description": "Retrieve URL rewrite configurations based on target paths.",
        "operationId": "UrlManager_ListUrlRewritesByTargetPaths",
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/urlmanagerListUrlRewritesByTargetPathsRequest "
            }
          },
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          },
          "500": {
            "description": "An internal error occurred is thrown when an incompatible payload is sent",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/urlmanagerListUrlRewritesByTargetPathsRequest"
            }
          }
        ],
        "tags": [
          "Basic Operations"
        ],
        "security": [
          {
            "standardAuthorization": []
          }
        ]
      }
    },
    "/urlmanager/resolve_url_rewrite": {
      "post": {
        "summary": "Resolve Url Rewrite",
        "description": "Resolve and retrieve the rewritten URL for a given input URL.",
        "operationId": "UrlManager_ResolveUrlRewrite",
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/urlmanagerUrlRewrite"
            }
          },
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          },
          "500": {
            "description": "An internal error occurred is thrown when an incompatible payload is sent",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/urlmanagerResolveUrlRewriteRequest"
            }
          }
        ],
        "tags": [
          "Basic Operations"
        ],
        "security": [
          {
            "standardAuthorization": []
          }
        ]
      }
    }
  },
  "definitions": {
    "GetUrlRewriteRequestCompoundIdentifier": {
      "type": "object",
      "properties": {
        "context": {
          "type": "string"
        },
        "requestPath": {
          "type": "string"
        }
      }
    },
    "ListUrlRewritesRequestFilter": {
      "type": "object",
      "properties": {
        "context": {
          "type": "string"
        },
        "requestPath": {
          "type": "string"
        },
        "targetPath": {
          "type": "string"
        },
        "redirectType": {
          "$ref": "#/definitions/UrlRewriteRedirectType"
        }
      }
    },
    "UrlRewriteLinkRel": {
      "type": "string",
      "enum": [
        "LinkRel_UNKNOWN",
        "LinkRel_NONE",
        "LinkRel_CANONICAL",
        "LinkRel_ALTERNATE"
      ],
      "default": "LinkRel_UNKNOWN"
    },
    "UrlRewriteRedirectType": {
      "type": "string",
      "enum": [
        "RedirectType_UNKNOWN",
        "RedirectType_OK",
        "RedirectType_PERMANENT",
        "RedirectType_TEMPORARY"
      ],
      "default": "RedirectType_UNKNOWN"
    },
    "protobufAny": {
      "type": "object",
      "properties": {
        "@type": {
          "type": "string"
        }
      },
      "additionalProperties": {}
    },
    "rpcStatus": {
      "type": "object",
      "properties": {
        "code": {
          "type": "integer",
          "format": "int32"
        },
        "message": {
          "type": "string"
        },
        "details": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/protobufAny"
          }
        }
      }
    },
    "urlmanagerChangeUrlRewriteRequestPathRequest": {
      "type": "object",
      "properties": {
        "tenantId": {
          "type": "string",
          "description": "Required."
        },
        "context": {
          "type": "string",
          "description": "Required."
        },
        "requestPath": {
          "type": "string",
          "description": "Required."
        },
        "requestPathNew": {
          "type": "string",
          "description": "Required."
        }
      }
    },
    "urlmanagerChangeUrlRewriteRequestPathResponse": {
      "type": "object"
    },
    "urlmanagerCreateUrlRewriteRequest": {
      "type": "object",
      "properties": {
        "tenantId": {
          "type": "string",
          "description": "Required."
        },
        "context": {
          "type": "string",
          "description": "Required."
        },
        "requestPath": {
          "type": "string",
          "description": "Required."
        },
        "targetPath": {
          "type": "string",
          "description": "Required."
        },
        "redirectType": {
          "$ref": "#/definitions/UrlRewriteRedirectType",
          "description": "Required."
        },
        "linkRel": {
          "$ref": "#/definitions/UrlRewriteLinkRel",
          "description": "Required."
        }
      }
    },
    "urlmanagerDeleteUrlRewriteRequest": {
      "type": "object",
      "properties": {
        "tenantId": {
          "type": "string",
          "description": "Required."
        },
        "id": {
          "type": "string",
          "description": "Required."
        }
      }
    },
    "urlmanagerDeleteUrlRewriteResponse": {
      "type": "object"
    },
    "urlmanagerGetUrlRewriteRequest": {
      "type": "object",
      "properties": {
        "tenantId": {
          "type": "string",
          "description": "Required."
        },
        "id": {
          "type": "string"
        },
        "compoundIdentifier": {
          "$ref": "#/definitions/GetUrlRewriteRequestCompoundIdentifier"
        }
      }
    },
    "urlmanagerListUrlRewritesByTargetPathsRequest": {
      "type": "object",
      "properties": {
        "tenantId": {
          "type": "string",
          "description": "Required."
        },
        "targetPaths": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "description": "Required."
        },
        "context": {
          "type": "string",
          "description": "Optional."
        },
        "linkRel": {
          "$ref": "#/definitions/UrlRewriteLinkRel",
          "description": "Optional."
        }
      }
    },
    "urlmanagerListUrlRewritesByTargetPathsResponse": {
      "type": "object",
      "properties": {
        "urlRewrites": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/urlmanagerUrlRewrite"
          }
        }
      }
    },
    "urlmanagerListUrlRewritesRequest": {
      "type": "object",
      "properties": {
        "tenantId": {
          "type": "string",
          "description": "Required."
        },
        "filter": {
          "$ref": "#/definitions/ListUrlRewritesRequestFilter",
          "description": "Optional."
        },
        "pageSize": {
          "type": "integer",
          "format": "int64",
          "description": "The maximum number of url rewrites to return. The service may return fewer than\nthis value.\nIf unspecified, at most 10 url rewrites will be returned.\nThe maximum value is 200; values above 200 will be coerced to 200."
        },
        "pageToken": {
          "type": "string",
          "description": "A page token, received from a previous `ListUrlRewrites` call.\nProvide this to retrieve the subsequent page.\n\n\nWhen paginating, all other parameters provided to `ListUrlRewrites` must match\nthe call that provided the page token."
        }
      }
    },
    "urlmanagerListUrlRewritesResponse": {
      "type": "object",
      "properties": {
        "urlRewrites": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/urlmanagerUrlRewrite"
          }
        },
        "nextPageToken": {
          "type": "string",
          "description": "A token that can be sent as `page_token` to retrieve the next page.\nIf this field is omitted, there are no subsequent pages."
        }
      }
    },
    "urlmanagerResolveUrlRewriteRequest": {
      "type": "object",
      "properties": {
        "tenantId": {
          "type": "string",
          "description": "Required."
        },
        "context": {
          "type": "string",
          "description": "Required."
        },
        "requestPath": {
          "type": "string",
          "description": "Required."
        }
      }
    },
    "urlmanagerUrlRewrite": {
      "type": "object",
      "properties": {
        "tenantId": {
          "type": "string"
        },
        "id": {
          "type": "string"
        },
        "context": {
          "type": "string",
          "description": "Context field is part of the key.\nit's up to whoever is using the url manager to define it.\ne.g. locale or market or a concatenation of the two if needed."
        },
        "requestPath": {
          "type": "string"
        },
        "targetPath": {
          "type": "string"
        },
        "redirectType": {
          "$ref": "#/definitions/UrlRewriteRedirectType"
        },
        "linkRel": {
          "$ref": "#/definitions/UrlRewriteLinkRel"
        }
      }
    }
  },
  "securityDefinitions": {
    "standardAuthorization": {
      "type": "oauth2",
      "name": "Authorization",
      "in": "header"
    }
  }
}
